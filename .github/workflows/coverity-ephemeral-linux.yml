# demonstrate Coverity toolkit caching on ephemeral build agents
name: coverity-ephemeral-linux
on:
  push:
    branches: [ main, master, develop, stage, release ]
  workflow_dispatch:
jobs:
  coverity:
    runs-on: ubuntu-latest
    env:
      COVERITY_URL: ${{ vars.COVERITY_URL }}
      COV_USER: ${{ secrets.COV_USER }}
      COVERITY_PASSPHRASE: ${{ secrets.COVERITY_PASSPHRASE }}
      COVERITY_PROJECT: ${{ github.event.repository.name }}
      COVERITY_STREAM: ${{ github.event.repository.name }}-${{ github.ref_name }}
      COVERITY_TOOLKIT: cov-analysis-linux64-2023.6.0
    steps:
    - name: Checkout Source
      uses: actions/checkout@v3
    - name: Setup Java JDK
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: microsoft
        cache: maven
    # designate the Coverity toolkit as something to cache, for more details see:
    # https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows
    - name: Cache Coverity Toolkit
      id: cache-coverity
      uses: actions/cache@v3
      with:
        path: ${{ runner.temp }}/${{ env.COVERITY_TOOLKIT }}
        key: ${{ env.COVERITY_TOOLKIT }}
    # download Coverity only if cache-hit from above is not true
    - name: Coverity Download
      if: ${{ steps.cache-coverity.outputs.cache-hit != 'true' }}
      run: |
        curl -fLsS --user $COV_USER:$COVERITY_PASSPHRASE $COVERITY_URL/downloadFile.htm?fn=$COVERITY_TOOLKIT.tar.gz | tar -C $RUNNER_TEMP -xzf -
        curl -fLsS --user $COV_USER:$COVERITY_PASSPHRASE -o $RUNNER_TEMP/$COVERITY_TOOLKIT/bin/license.dat $COVERITY_URL/downloadFile.htm?fn=license.dat
    - name: Coverity Scan
      run: |
        $RUNNER_TEMP/$COVERITY_TOOLKIT/bin/coverity scan -o commit.connect.url=$COVERITY_URL \
            -o commit.connect.project=$COVERITY_PROJECT -o commit.connect.stream=$COVERITY_STREAM
