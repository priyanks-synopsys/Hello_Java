# Black Duck using Synopsys Action and Coverity on Polaris with getIssues quality gate and LCA incremental PR scans
name: BD + CoP Incremental

on:
  push:
    branches: [ main, master, stage, release ]
  pull_request:
    branches: [ main, master, stage, release ]
  workflow_dispatch:

jobs:
  blackduck:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source
      uses: actions/checkout@v3
    - name: Setup Java JDK
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: microsoft
        cache: maven
    - name: Maven Build
      run: mvn -B -DskipTests package
    - name: Black Duck Scan
      uses: synopsys-sig/synopsys-action@v1.2.0
      env:
        DETECT_PROJECT_NAME: ${{ github.event.repository.name }}
        DETECT_PROJECT_VERSION_NAME: ${{ github.ref_name }}
        DETECT_CODE_LOCATION_NAME: ${{ github.event.repository.name }}-${{ github.ref_name }}
      with:
        blackduck_url: ${{ vars.BLACKDUCK_URL }}
        blackduck_apiToken: ${{ secrets.BLACKDUCK_API_TOKEN }}
        # pushes will initiate a full INTELLIGENT scan and pull requests will initiate a RAPID scan
        #blackduck_scan_full: false
        # create fix pull requests if vulnerabilities are reported (Node.js only)
        #blackduck_automation_fixpr: false
        # required parameter if blackduck_automation_fixpr is enabled
        # make sure GITHUB_TOKEN has the appropriate permissions
        #github_token: ${{ secrets.GITHUB_TOKEN }}
        # comma delimited list of severities to break the build when detected
        # severities: ALL,NONE,BLOCKER,CRITICAL,MAJOR,MINOR,OK,TRIVIAL,UNSPECIFIED
        blackduck_scan_failure_severities: "BLOCKER"

  coverity-on-polaris:
    runs-on: ubuntu-latest
    env:
      POLARIS_SERVER_URL: ${{ vars.POLARIS_SERVER_URL }}
      POLARIS_ACCESS_TOKEN: ${{ secrets.POLARIS_ACCESS_TOKEN }}
      POLARIS_PROJECT: ${{ github.event.repository.name }}
      POLARIS_ZIP: polaris_cli-linux64.zip
    steps:
    - name: Checkout Source
      uses: actions/checkout@v3
    - name: Setup Java JDK
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: microsoft
        cache: maven
    - name: Coverity on Polaris Full Scan
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        curl -fLOsS $POLARIS_SERVER_URL/api/tools/$POLARIS_ZIP
        unzip -d $RUNNER_TEMP -jo $POLARIS_ZIP && rm -f $POLARIS_ZIP
        $RUNNER_TEMP/polaris --co project.name=$POLARIS_PROJECT analyze -w
        curl -fLOsS https://www.chuckaude.com/repo/getIssues && chmod +x getIssues
        ./getIssues --project $POLARIS_PROJECT --branch ${{ github.ref_name }} --severity high --exit1-if-issues
    - name: Get Pull Request Changeset
      if: ${{ github.event_name == 'pull_request' }}
      id: changeset
      uses: jitterbit/get-changed-files@v1
    - name: Coverity on Polaris PR Scan
      if: ${{ github.event_name == 'pull_request' && steps.changeset.outputs.added_modified != '' }}
      run: |
        curl -fLOsS $POLARIS_SERVER_URL/api/tools/$POLARIS_ZIP
        unzip -d $RUNNER_TEMP -jo $POLARIS_ZIP && rm -f $POLARIS_ZIP
        export POLARIS_FF_ENABLE_COVERITY_INCREMENTAL=true
        echo ${{ steps.changeset.outputs.added_modified }} | tee changeset.txt
        $RUNNER_TEMP/polaris --co project.name=$POLARIS_PROJECT --co project.branch=$GITHUB_BASE_REF analyze -w --incremental changeset.txt
        COUNT=$(cat .synopsys/polaris/data/coverity/*/idir/incremental-results/new-issues.json | jq '. | length')
        if [ $COUNT -ne 0 ]; then
          echo "$COUNT new issues detected, do something here"
          exit 1
        fi
