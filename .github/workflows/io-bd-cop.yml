# IO with Black Duck and Coverity on Polaris on a self-hosted runner
name: io-bd-cop
on:
  push:
    branches: [ main, master, develop, stage, release ]
  workflow_dispatch:
jobs:
  io-bd-cop:
    runs-on: self-hosted
    env:
      POLARIS_SERVER_URL: ${{ vars.POLARIS_SERVER_URL }}
      POLARIS_ACCESS_TOKEN: ${{ secrets.POLARIS_ACCESS_TOKEN }}
      BLACKDUCK_URL: ${{ vars.BLACKDUCK_URL }}
      BLACKDUCK_API_TOKEN: ${{ secrets.BLACKDUCK_API_TOKEN }}
      PROJECT: ${{ github.event.repository.name }}
      BRANCH: ${{ github.ref_name }}
    steps:
    - name: Clean Workspace
      uses: AutoModality/action-clean@v1
    - name: Checkout Source
      uses: actions/checkout@v3
    - name: Setup Java JDK
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: microsoft
        cache: maven
    - name: Synopsys Intelligent Security Scan
      id: prescription
      uses: synopsys-sig/intelligent-security-scan@v1
      with:
        ioServerUrl: ${{vars.IO_SERVER_URL}}
        ioServerToken: ${{secrets.IO_SERVER_TOKEN}}
        workflowServerUrl: ${{vars.WORKFLOW_SERVER_URL}}
        additionalWorkflowArgs: --persona=developer --release.type=minor --sast.rescan.threshold=10  --sca.rescan.threshold=10 --file.change.threshold=20
                  --polaris.url=${{vars.POLARIS_SERVER_URL}} --polaris.token=${{secrets.POLARIS_ACCESS_TOKEN}}
                  --sensitive.package.pattern='.*(.txt)$'
        stage: "IO"
    - name: Coverity on Polaris Scan
      if: ${{steps.prescription.outputs.sastScan == 'true' }}
      run: |
        curl -fLOsS $POLARIS_SERVER_URL/api/tools/polaris_cli-linux64.zip
        unzip -d $RUNNER_TEMP -jo polaris_cli-linux64.zip
        $RUNNER_TEMP/polaris --co project.name=$PROJECT analyze -w
    - name: Black Duck Scan
      if: ${{steps.prescription.outputs.scaScan == 'true' }}
      uses: blackducksoftware/github-action@v2
      with:
        args: --detect.project.name=$PROJECT --detect.project.version.name=$BRANCH --detect.excluded.detector.types=GRADLE
    - name: Synopsys Intelligent Security Scan
      if: ${{ steps.prescription.outputs.sastScan == 'true' || steps.prescription.outputs.scaScan == 'true' }}
      uses: synopsys-sig/intelligent-security-scan@v1
      with:
        ioServerUrl: ${{vars.IO_SERVER_URL}}
        ioServerToken: ${{secrets.IO_SERVER_TOKEN}}
        workflowServerUrl: ${{vars.WORKFLOW_SERVER_URL}}
        additionalWorkflowArgs: --IS_SAST_ENABLED=${{steps.prescription.outputs.sastScan}} --IS_SCA_ENABLED=${{steps.prescription.outputs.scaScan}}
                --polaris.project.name=$PROJECT --polaris.url=${{vars.POLARIS_SERVER_URL}} --polaris.token=${{secrets.POLARIS_ACCESS_TOKEN}}
                --blackduck.project.name=$PROJECT:$BRANCH --blackduck.url=${{vars.BLACKDUCK_URL}} --blackduck.api.token=${{secrets.BLACKDUCK_API_TOKEN}}
        stage: "WORKFLOW"
    - name: Upload SARIF file
      if: ${{steps.prescription.outputs.sastScan == 'true' }}
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: workflowengine-results.sarif.json
